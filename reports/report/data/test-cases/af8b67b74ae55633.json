{"uid":"af8b67b74ae55633","name":"注册","fullName":"test_case.testlogsign.Testcase#test_sign_in","historyId":"301b6098494484c606c30a5ca85669f4","time":{"start":1695619124257,"stop":1695619196155,"duration":71898},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17]' is not a valid XPath expression.\n  (Session info: chrome=116.0.5845.188)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00751C53+49427]\n\t(No symbol) [0x006E5F41]\n\t(No symbol) [0x005EC64D]\n\t(No symbol) [0x005EFAA2]\n\t(No symbol) [0x005F0DAA]\n\t(No symbol) [0x005F0E50]\n\t(No symbol) [0x00619501]\n\t(No symbol) [0x006198DB]\n\t(No symbol) [0x006487D2]\n\t(No symbol) [0x00634A64]\n\t(No symbol) [0x00646F2A]\n\t(No symbol) [0x00634816]\n\t(No symbol) [0x00611127]\n\t(No symbol) [0x006122AD]\n\tGetHandleVerifier [0x009A7149+2496009]\n\tGetHandleVerifier [0x009ED572+2783794]\n\tGetHandleVerifier [0x009E7491+2758993]\n\tGetHandleVerifier [0x007D11D0+571024]\n\t(No symbol) [0x006EF96A]\n\t(No symbol) [0x006EBD88]\n\t(No symbol) [0x006EBE6B]\n\t(No symbol) [0x006DEA97]\n\tBaseThreadInitThunk [0x7679FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77B67B1E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77B67AEE+238]","statusTrace":"self = <webjob1.test_case.testlogsign.Testcase object at 0x0000022272058340>\nsigin = {'name': '小米账号注册', 'sign_in': {'password': 'lzc970628', 'username': 18342051835}}\n\n    @pytest.mark.parametrize('sigin', YamlUtil().userlogin('E:/webproject/webjob1/data/login.yml', 'signin'))\n    @allure.title('注册')\n    def test_sign_in(self, sigin):\n        with allure.step('1.打开小米网站'):\n            base_page = Base('https://www.mi.com/')\n        with allure.step('2.点击登录按钮'):\n            base_page.click(By.CLASS_NAME, 'user-name')\n            base_page.wait(5)\n        with allure.step('3.点击注册'):\n            base_page.click(By.XPATH, '//div[@class=\"ant-tabs-tab\"]')\n            base_page.wait(5)\n        with allure.step('4.国家是否默认中国'):\n            prompt_text = base_page.getattribute(By.XPATH, '//span[@title=\"中国\"]', 'textContent')\n            assert prompt_text == '中国'\n        with allure.step('5.鼠标移上是否有提示'):\n            base_page.move_to_element(By.XPATH, '//div[@class=\"mi-select-field mi-select-field--with-label mi-form-field mi-form-field--fullwidth mi-form-field--bordered\"]')\n            base_page.wait(2)\n            toast = base_page.getattribute(By.XPATH, '//div[@class=\"mi-status-text__text\"]', 'textContent')\n            assert toast == '系统会根据您选择的国家/地区的法律法规存储您的个人信息'\n            base_page.wait(1)\n        with allure.step('6.点击 选择国家/地区，是否有选择框'):\n            base_page.click(By.XPATH, '//div[@class=\"mi-select-field mi-select-field--with-label mi-form-field mi-form-field--fullwidth mi-form-field--bordered\"]')\n            base_page.assert_locate(By.XPATH, '//div[@class=\"rc-virtual-list-holder\"]')\n        with allure.step('7.选择国家'):\n>           base_page.click(By.XPATH, '//div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17]')\n\ntest_case\\testlogsign.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nconfigs\\base_tools.py:31: in click\n    self.locate(ele_type, ele_val).click()\nconfigs\\base_tools.py:20: in locate\n    ele = self.driver.find_element(ele_type, ele_val)\nE:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nE:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002227205A4D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77B67B1E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77B67AEE+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17] because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17]' is not a valid XPath expression.\nE         (Session info: chrome=116.0.5845.188)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00751C53+49427]\nE       \t(No symbol) [0x006E5F41]\nE       \t(No symbol) [0x005EC64D]\nE       \t(No symbol) [0x005EFAA2]\nE       \t(No symbol) [0x005F0DAA]\nE       \t(No symbol) [0x005F0E50]\nE       \t(No symbol) [0x00619501]\nE       \t(No symbol) [0x006198DB]\nE       \t(No symbol) [0x006487D2]\nE       \t(No symbol) [0x00634A64]\nE       \t(No symbol) [0x00646F2A]\nE       \t(No symbol) [0x00634816]\nE       \t(No symbol) [0x00611127]\nE       \t(No symbol) [0x006122AD]\nE       \tGetHandleVerifier [0x009A7149+2496009]\nE       \tGetHandleVerifier [0x009ED572+2783794]\nE       \tGetHandleVerifier [0x009E7491+2758993]\nE       \tGetHandleVerifier [0x007D11D0+571024]\nE       \t(No symbol) [0x006EF96A]\nE       \t(No symbol) [0x006EBD88]\nE       \t(No symbol) [0x006EBE6B]\nE       \t(No symbol) [0x006DEA97]\nE       \tBaseThreadInitThunk [0x7679FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77B67B1E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77B67AEE+238]\n\nE:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: InvalidSelectorException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17]' is not a valid XPath expression.\n  (Session info: chrome=116.0.5845.188)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00751C53+49427]\n\t(No symbol) [0x006E5F41]\n\t(No symbol) [0x005EC64D]\n\t(No symbol) [0x005EFAA2]\n\t(No symbol) [0x005F0DAA]\n\t(No symbol) [0x005F0E50]\n\t(No symbol) [0x00619501]\n\t(No symbol) [0x006198DB]\n\t(No symbol) [0x006487D2]\n\t(No symbol) [0x00634A64]\n\t(No symbol) [0x00646F2A]\n\t(No symbol) [0x00634816]\n\t(No symbol) [0x00611127]\n\t(No symbol) [0x006122AD]\n\tGetHandleVerifier [0x009A7149+2496009]\n\tGetHandleVerifier [0x009ED572+2783794]\n\tGetHandleVerifier [0x009E7491+2758993]\n\tGetHandleVerifier [0x007D11D0+571024]\n\t(No symbol) [0x006EF96A]\n\t(No symbol) [0x006EBD88]\n\t(No symbol) [0x006EBE6B]\n\t(No symbol) [0x006DEA97]\n\tBaseThreadInitThunk [0x7679FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77B67B1E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77B67AEE+238]","statusTrace":"self = <webjob1.test_case.testlogsign.Testcase object at 0x0000022272058340>\nsigin = {'name': '小米账号注册', 'sign_in': {'password': 'lzc970628', 'username': 18342051835}}\n\n    @pytest.mark.parametrize('sigin', YamlUtil().userlogin('E:/webproject/webjob1/data/login.yml', 'signin'))\n    @allure.title('注册')\n    def test_sign_in(self, sigin):\n        with allure.step('1.打开小米网站'):\n            base_page = Base('https://www.mi.com/')\n        with allure.step('2.点击登录按钮'):\n            base_page.click(By.CLASS_NAME, 'user-name')\n            base_page.wait(5)\n        with allure.step('3.点击注册'):\n            base_page.click(By.XPATH, '//div[@class=\"ant-tabs-tab\"]')\n            base_page.wait(5)\n        with allure.step('4.国家是否默认中国'):\n            prompt_text = base_page.getattribute(By.XPATH, '//span[@title=\"中国\"]', 'textContent')\n            assert prompt_text == '中国'\n        with allure.step('5.鼠标移上是否有提示'):\n            base_page.move_to_element(By.XPATH, '//div[@class=\"mi-select-field mi-select-field--with-label mi-form-field mi-form-field--fullwidth mi-form-field--bordered\"]')\n            base_page.wait(2)\n            toast = base_page.getattribute(By.XPATH, '//div[@class=\"mi-status-text__text\"]', 'textContent')\n            assert toast == '系统会根据您选择的国家/地区的法律法规存储您的个人信息'\n            base_page.wait(1)\n        with allure.step('6.点击 选择国家/地区，是否有选择框'):\n            base_page.click(By.XPATH, '//div[@class=\"mi-select-field mi-select-field--with-label mi-form-field mi-form-field--fullwidth mi-form-field--bordered\"]')\n            base_page.assert_locate(By.XPATH, '//div[@class=\"rc-virtual-list-holder\"]')\n        with allure.step('7.选择国家'):\n>           base_page.click(By.XPATH, '//div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17]')\n\ntest_case\\testlogsign.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nconfigs\\base_tools.py:31: in click\n    self.locate(ele_type, ele_val).click()\nconfigs\\base_tools.py:20: in locate\n    ele = self.driver.find_element(ele_type, ele_val)\nE:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nE:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002227205A4D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77B67B1E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77B67AEE+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17] because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17]' is not a valid XPath expression.\nE         (Session info: chrome=116.0.5845.188)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00751C53+49427]\nE       \t(No symbol) [0x006E5F41]\nE       \t(No symbol) [0x005EC64D]\nE       \t(No symbol) [0x005EFAA2]\nE       \t(No symbol) [0x005F0DAA]\nE       \t(No symbol) [0x005F0E50]\nE       \t(No symbol) [0x00619501]\nE       \t(No symbol) [0x006198DB]\nE       \t(No symbol) [0x006487D2]\nE       \t(No symbol) [0x00634A64]\nE       \t(No symbol) [0x00646F2A]\nE       \t(No symbol) [0x00634816]\nE       \t(No symbol) [0x00611127]\nE       \t(No symbol) [0x006122AD]\nE       \tGetHandleVerifier [0x009A7149+2496009]\nE       \tGetHandleVerifier [0x009ED572+2783794]\nE       \tGetHandleVerifier [0x009E7491+2758993]\nE       \tGetHandleVerifier [0x007D11D0+571024]\nE       \t(No symbol) [0x006EF96A]\nE       \t(No symbol) [0x006EBD88]\nE       \t(No symbol) [0x006EBE6B]\nE       \t(No symbol) [0x006DEA97]\nE       \tBaseThreadInitThunk [0x7679FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77B67B1E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77B67AEE+238]\n\nE:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: InvalidSelectorException","steps":[{"name":"1.打开小米网站","time":{"start":1695619124258,"stop":1695619173912,"duration":49654},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"2.点击登录按钮","time":{"start":1695619173912,"stop":1695619186663,"duration":12751},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"3.点击注册","time":{"start":1695619186663,"stop":1695619192148,"duration":5485},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"4.国家是否默认中国","time":{"start":1695619192148,"stop":1695619192191,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"5.鼠标移上是否有提示","time":{"start":1695619192193,"stop":1695619195570,"duration":3377},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"6.点击 选择国家/地区，是否有选择框","time":{"start":1695619195570,"stop":1695619196063,"duration":493},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"7.选择国家","time":{"start":1695619196063,"stop":1695619196135,"duration":72},"status":"broken","statusMessage":"selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17]' is not a valid XPath expression.\n  (Session info: chrome=116.0.5845.188)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00751C53+49427]\n\t(No symbol) [0x006E5F41]\n\t(No symbol) [0x005EC64D]\n\t(No symbol) [0x005EFAA2]\n\t(No symbol) [0x005F0DAA]\n\t(No symbol) [0x005F0E50]\n\t(No symbol) [0x00619501]\n\t(No symbol) [0x006198DB]\n\t(No symbol) [0x006487D2]\n\t(No symbol) [0x00634A64]\n\t(No symbol) [0x00646F2A]\n\t(No symbol) [0x00634816]\n\t(No symbol) [0x00611127]\n\t(No symbol) [0x006122AD]\n\tGetHandleVerifier [0x009A7149+2496009]\n\tGetHandleVerifier [0x009ED572+2783794]\n\tGetHandleVerifier [0x009E7491+2758993]\n\tGetHandleVerifier [0x007D11D0+571024]\n\t(No symbol) [0x006EF96A]\n\t(No symbol) [0x006EBD88]\n\t(No symbol) [0x006EBE6B]\n\t(No symbol) [0x006DEA97]\n\tBaseThreadInitThunk [0x7679FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77B67B1E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77B67AEE+238]\n\n","statusTrace":"  File \"E:\\webproject\\webjob1\\test_case\\testlogsign.py\", line 83, in test_sign_in\n    base_page.click(By.XPATH, '//div[@class=\"ant-select-item ant-select-item-option ant-select-item-option-grouped\"]/[position()=17]')\n  File \"E:\\webproject\\webjob1\\configs\\base_tools.py\", line 31, in click\n    self.locate(ele_type, ele_val).click()\n  File \"E:\\webproject\\webjob1\\configs\\base_tools.py\", line 20, in locate\n    ele = self.driver.find_element(ele_type, ele_val)\n  File \"E:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 831, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"E:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"E:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"4f04ee155c9074aa","name":"log","source":"4f04ee155c9074aa.txt","type":"text/plain","size":106158}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":7,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"testlogsign"},{"name":"subSuite","value":"Testcase"},{"name":"host","value":"changgp"},{"name":"thread","value":"9492-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.testlogsign"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"sigin","value":"{'name': '小米账号注册', 'sign_in': {'username': 18342051835, 'password': 'lzc970628'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"af8b67b74ae55633.json","parameterValues":["{'name': '小米账号注册', 'sign_in': {'username': 18342051835, 'password': 'lzc970628'}}"]}